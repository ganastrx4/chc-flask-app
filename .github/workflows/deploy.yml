name: Deploy Flask App

on:
  push:
    branches:
      - main  # Cambia esto si usas otra rama para producción

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Check-out del código
      - name: Checkout code
        uses: actions/checkout@v2
      
      # 2. Configuración de Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'  # Cambia la versión de Python si es necesario
      
      # 3. Instalar dependencias
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      # 4. Configurar las variables de entorno
      - name: Set environment variables
        run: echo "WORLD_APP_CLIENT_ID=${{ secrets.WORLD_APP_CLIENT_ID }}" >> $GITHUB_ENV
        run: echo "WORLD_APP_CLIENT_SECRET=${{ secrets.WORLD_APP_CLIENT_SECRET }}" >> $GITHUB_ENV
        run: echo "WORLD_APP_REDIRECT_URI=${{ secrets.WORLD_APP_REDIRECT_URI }}" >> $GITHUB_ENV

      # 5. Desplegar la app (si usas un servicio como Heroku o Render)
      - name: Deploy Flask app
        run: |
          # Aquí puedes poner el comando que usas para desplegar tu app
          # Por ejemplo, si estás usando Heroku, el comando sería algo así:
          git remote add heroku https://git.heroku.com/tu-app-heroku.git
          git push heroku main

